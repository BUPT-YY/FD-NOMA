function [ result ] = phi_eq4(l, cn, Pu, Psi)
    %直接使用表达式(4)会超出double类型的表达范围, 造成Inf(NaN)计算结果.
    %这里我们用parabolic cylinder function的渐近展开来计算, 
    %渐近展开的结果为了减少计算这里使用Horner法则(秦九韶规则)
    if(l == 0)
        result = 1;
    else
        a = cn/Pu; b = 1/Psi + 2*cn/Pu;
        x = sqrt(2*a)/b; x2 = x*x;
        if(x<=0.2)
            result = gamma(l)*((2*a)^(-l/2));
            switch (l)
                case 1
                    resCoef=x* (1 +  x2 * (-1 +  x2 * (3 +  x2 * (-15 +  x2 * (105 +  x2 * (-945 +  x2 * (10395 +  x2 * (-135135 +  x2 * (2027025 +  x2 * (-34459425 +  x2 * (654729075 +  x2 * (-13749310575 +  x2 * (316234143225 +  x2 * (-7905853580625 + 213458046676875 * x2))))))))))))));
                case 2
                    resCoef=x2 * (1 +  x2 * (-3 +  x2 * (15 +  x2 * (-105 +  x2 * (945 +  x2 * (-10395 +  x2 * (135135 +  x2 * (-2027025 +  x2 * (34459425 +  x2 * (-654729075 +  x2 * (13749310575 +  x2 * (-316234143225 +  x2 * (7905853580625 +  x2 * (-213458046676875 + 6190283353629375 * x2))))))))))))));
                case 3
                    resCoef=x^3 * (1 +  x2 * (-6 +  x2 * (45 +  x2 * (-420 +  x2 * (4725 +  x2 * (-62370 +  x2 * (945945 +  x2 * (-16216200 +  x2 * (310134825 +  x2 * (-6547290750 +  x2 * (151242416325 +  x2 * (-3794809718700 +  x2 * (102776096548125 - 2988412653476250 * x2)))))))))))));
                case 4
                    resCoef=x^4 * (1 +  x2 * (-10 +  x2 * (105 +  x2 * (-1260 +  x2 * (17325 +  x2 * (-270270 +  x2 * (4729725 +  x2 * (-91891800 +  x2 * (1964187225 +  x2 * (-45831035250 +  x2 * (1159525191825 +  x2 * (-31623414322500 +  x2 * (924984868933125 - 28887988983603750 * x2)))))))))))));
                case 5
                    resCoef=x^5 * (1 +  x2 * (-15 +  x2 * (210 +  x2 * (-3150 +  x2 * (51975 +  x2 * (-945945 +  x2 * (18918900 +  x2 * (-413513100 +  x2 * (9820936125 +  x2 * (-252070693875 +  x2 * (6957151150950 +  x2 * (-205552193096250 + 6474894082531875 * x2))))))))))));
                case 6
                    resCoef=x^6 * (1 +  x2 * (-21 +  x2 * (378 +  x2 * (-6930 +  x2 * (135135 +  x2 * (-2837835 +  x2 * (64324260 +  x2 * (-1571349780 +  x2 * (41247931725 +  x2 * (-1159525191825 +  x2 * (34785755754750 +  x2 * (-1109981842719750 + 37554385678684875 * x2))))))))))));
                case 7
                    resCoef=x^7 * (1 +  x2 * (-28 +  x2 * (630 +  x2 * (-13860 +  x2 * (315315 +  x2 * (-7567560 +  x2 * (192972780 +  x2 * (-5237832600 +  x2 * (151242416325 +  x2 * (-4638100767300 +  x2 * (150738274937250 - 5179915266025500 * x2)))))))))));
                case 8
                    resCoef=x^8 * (1 +  x2 * (-36 +  x2 * (990 +  x2 * (-25740 +  x2 * (675675 +  x2 * (-18378360 +  x2 * (523783260 +  x2 * (-15713497800 +  x2 * (496939367925 +  x2 * (-16564645597500 +  x2 * (581419060472250 - 21459648959248500 * x2)))))))))));
                case 9
                    resCoef=x^9 * (1 +  x2 * (-45 +  x2 * (1485 +  x2 * (-45045 +  x2 * (1351350 +  x2 * (-41351310 +  x2 * (1309458150 +  x2 * (-43212118950 +  x2 * (1490818103775 +  x2 * (-53835098191875 + 2034966711652875 * x2))))))))));
                case 10
                    resCoef=x^10 * (1 +  x2 * (-55 +  x2 * (2145 +  x2 * (-75075 +  x2 * (2552550 +  x2 * (-87297210 +  x2 * (3055402350 +  x2 * (-110430970650 +  x2 * (4141161399375 +  x2 * (-161505294575625 + 6557114959770375 * x2))))))))));
                case 11
                    resCoef=x^11 * (1 +  x2 * (-66 +  x2 * (3003 +  x2 * (-120120 +  x2 * (4594590 +  x2 * (-174594420 +  x2 * (6721885170 +  x2 * (-265034329560 +  x2 * (10767019638375 - 452214824811750 * x2)))))))));
                case 12
                    resCoef=x^12 * (1 +  x2 * (-78 +  x2 * (4095 +  x2 * (-185640 +  x2 * (7936110 +  x2 * (-333316620 +  x2 * (14054850810 +  x2 * (-602350749000 +  x2 * (26428139112375 - 1192202719958250 * x2)))))))));
                case 13
                    resCoef=x^13 * (1 +  x2 * (-91 +  x2 * (5460 +  x2 * (-278460 +  x2 * (13226850 +  x2 * (-611080470 +  x2 * (28109701620 +  x2 * (-1305093289500 + 61665657928875 * x2))))))));
                case 14
                    resCoef=x^14 * (1 +  x2 * (-105 +  x2 * (7140 +  x2 * (-406980 +  x2 * (21366450 +  x2 * (-1081142370 +  x2 * (54057118500 +  x2 * (-2710578370500 + 137561852302875 * x2))))))));
                case 15
                    resCoef=x^15 * (1 +  x2 * (-120 +  x2 * (9180 +  x2 * (-581400 +  x2 * (33575850 +  x2 * (-1853386920 +  x2 * (100391791500 - 5421156741000 * x2)))))));
                otherwise
                    resCoef = 0;
            end
            result = result*resCoef;
        elseif (x>10)
            con=1.25331413731550025120788264241;%sqrt(pi/2)
            y = 1/x;
            switch(l)
                case 1
                    resulttemp = con + y*(-1*y*(con/2+y*(-1/3+y*(con/8-y/15))));
                case 2
                    resulttemp = 1+y*(-con+y*(1+y*(-con/2+y*(1/3-con/8*y))));
                case 3
                    resulttemp = con/2+y*(-1+y*(3*con/4+y*(-2/3+y*(5*con/16-y/5))));
                case 4
                    resulttemp = 1/3+y*(-con/2+y*(2/3+y*(-5*con/12+y*(1/3-y*(7*con/48)))));
                case 5
                    resulttemp = con/8+y*(-1/3+y*(5*con/16+y*(-1/3+y*(35*con/192-2*y/15))));
                case 6
                    resulttemp = 1/15+y*(-con/8+y*(1/5+y*(-7*con/48+y*(2/15-21*con/320*y))));
                otherwise
                    resulttemp = paraCylinder(-l, b/sqrt(2*a));
            end
            
            result = gamma(l)*exp(b*b/(8*a))*((2*a)^(-l/2))*resulttemp;
        else
            result = gamma(l)*exp(b*b/(8*a))*((2*a)^(-l/2))*paraCylinder(-l, b/sqrt(2*a));
        end
        
    end
    
    
    

end
%k = -nu - 1;
%result = 2^((k-1)/2)/gamma(k+1)*(gamma((k+1)/2)*hypergeom([(k+1)/2],[1/2],x*x/2)-sqrt(2)*x*gamma(k/2+1)*hypergeom([k/2+1],[3/2],x*x/2));
%result = gamma(l)*exp(b*b/(8*a))*((2*a)^(-l/2))*result;%paraCylinder(-l, b/sqrt(2*a));